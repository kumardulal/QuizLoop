{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\New  Leaders Tech\\\\Desktop\\\\kumar-final-master\\\\src\\\\components\\\\QuestionArea.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { inject, observer } from 'mobx-react';\nimport React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { TouchableWithoutFeedbackBase } from \"react-native-web/dist/index\";\nimport View from \"react-native-web/dist/exports/View\";\nvar QuestionArea = inject('quizStore')(observer(function (props) {\n  return React.createElement(View, {\n    style: styles.questionArea,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.questionText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  }, \" Guess this Pirate! \"), React.createElement(Image, {\n    style: styles.pokemonImage,\n    source: {\n      uri: props.quizStore.currentQuestion.imageUrl\n    },\n    resizeMode: \"contain\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }));\n}));\nexport default QuestionArea;\nvar styles = StyleSheet.create({\n  questionArea: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%'\n  },\n  pokemonImage: _objectSpread({\n    border: 'ridge 7px brown',\n    width: '50%',\n    aspectRatio: 1 / 1\n  }, Platform.select({\n    web: {\n      height: '50%'\n    }\n  })),\n  questionText: {\n    color: 'white',\n    fontFamily: 'PokemonPixelFont',\n    fontSize: 52,\n    marginBottom: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/New  Leaders Tech/Desktop/kumar-final-master/src/components/QuestionArea.js"],"names":["inject","observer","React","TouchableWithoutFeedbackBase","QuestionArea","props","styles","questionArea","questionText","pokemonImage","uri","quizStore","currentQuestion","imageUrl","StyleSheet","create","flex","alignItems","justifyContent","width","border","aspectRatio","Platform","select","web","height","color","fontFamily","fontSize","marginBottom"],"mappings":";;;;;;;;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;SAC4CC,4B;;AAE5C,IAAMC,YAAY,GAAGJ,MAAM,CAAC,WAAD,CAAN,CAAoBC,QAAQ,CAAC,UAACI,KAAD,EAAW;AACzD,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEF,MAAM,CAACG,YAArB;AAAmC,IAAA,MAAM,EAAE;AAACC,MAAAA,GAAG,EAACL,KAAK,CAACM,SAAN,CAAgBC,eAAhB,CAAgCC;AAArC,KAA3C;AAA2F,IAAA,UAAU,EAAC,SAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH,CAPgD,CAA5B,CAArB;AASA,eAAeT,YAAf;AAEA,IAAME,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC7BR,EAAAA,YAAY,EAAE;AACVS,IAAAA,IAAI,EAAE,CADI;AAEVC,IAAAA,UAAU,EAAE,QAFF;AAGVC,IAAAA,cAAc,EAAE,QAHN;AAIVC,IAAAA,KAAK,EAAE;AAJG,GADe;AAO7BV,EAAAA,YAAY;AACRW,IAAAA,MAAM,EAAE,iBADA;AAERD,IAAAA,KAAK,EAAE,KAFC;AAGRE,IAAAA,WAAW,EAAE,IAAE;AAHP,KAMLC,QAAQ,CAACC,MAAT,CAAgB;AACfC,IAAAA,GAAG,EAAE;AACDC,MAAAA,MAAM,EAAE;AADP;AADU,GAAhB,CANK,CAPiB;AAmB7BjB,EAAAA,YAAY,EAAE;AACVkB,IAAAA,KAAK,EAAE,OADG;AAEVC,IAAAA,UAAU,EAAE,kBAFF;AAGVC,IAAAA,QAAQ,EAAE,EAHA;AAIVC,IAAAA,YAAY,EAAE;AAJJ;AAnBe,CAAlB,CAAf","sourcesContent":["import { inject, observer } from 'mobx-react'\nimport React from 'react'\nimport { Image, Platform, StyleSheet, Text, TouchableWithoutFeedbackBase, View } from 'react-native'\n\nconst QuestionArea = inject('quizStore')(observer((props) => {\n    return (\n        <View style={styles.questionArea}>\n            <Text style={styles.questionText}> Guess this Pirate! </Text>\n            <Image style={styles.pokemonImage} source={{uri:props.quizStore.currentQuestion.imageUrl}} resizeMode='contain'/>\n        </View>\n    );\n}))\n\nexport default QuestionArea\n\nconst styles = StyleSheet.create({\n    questionArea: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%',\n    },\n    pokemonImage: {\n        border: 'ridge 7px brown',\n        width: '50%',\n        aspectRatio: 1/1,\n        // For some reason, this is needed for web\n        // android is fine without this style prop\n        ...Platform.select({\n            web: {\n                height: '50%'\n            }\n        })\n    },\n    questionText: {\n        color: 'white', \n        fontFamily: 'PokemonPixelFont',\n        fontSize: 52,\n        marginBottom: 20\n    }\n})\n"]},"metadata":{},"sourceType":"module"}