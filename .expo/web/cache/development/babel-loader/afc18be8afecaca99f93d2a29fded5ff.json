{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\New  Leaders Tech\\\\Desktop\\\\kumar-final-master\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Provider } from 'mobx-react';\nimport AppLoading from 'expo-app-loading';\nimport { useCustomFonts } from \"./src/hooks/useCustomFonts\";\nimport QuizApp from \"./src/components/QuizApp\";\nimport { getRandomQuestion } from \"./src/hooks/databaseHooks\";\nimport rootStore from \"./src/stores/rootStore\";\nexport default function App() {\n  var _useCustomFonts = useCustomFonts(),\n      _useCustomFonts2 = _slicedToArray(_useCustomFonts, 1),\n      fontsLoaded = _useCustomFonts2[0];\n\n  var _useState = useState(window.localStorage.getItem(\"score\")),\n      _useState2 = _slicedToArray(_useState, 2),\n      result = _useState2[0],\n      setResult = _useState2[1];\n\n  if (!fontsLoaded) {\n    console.log('not loaded');\n    return React.createElement(AppLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return React.createElement(Provider, {\n    rootStore: rootStore,\n    questionStore: rootStore.questionStore,\n    quizStore: rootStore.quizStore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, React.createElement(QuizApp, {\n    result: score,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["C:/Users/New  Leaders Tech/Desktop/kumar-final-master/App.js"],"names":["React","useState","useEffect","Provider","AppLoading","useCustomFonts","QuizApp","getRandomQuestion","rootStore","App","fontsLoaded","window","localStorage","getItem","result","setResult","console","log","questionStore","quizStore","score","styles","StyleSheet","create"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;AAGA,SAASC,QAAT,QAAyB,YAAzB;AAGA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,cAAT;AAEA,OAAOC,OAAP;AACA,SAASC,iBAAT;AACA,OAAOC,SAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,wBAAoBJ,cAAc,EAAlC;AAAA;AAAA,MAAKK,WAAL;;AACA,kBAAyBT,QAAQ,CAACU,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAD,CAAjC;AAAA;AAAA,MAAOC,MAAP;AAAA,MAAcC,SAAd;;AAMA,MAAI,CAACL,WAAL,EAAkB;AAChBM,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,WACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAED,SACE,oBAAC,QAAD;AACE,IAAA,SAAS,EAAET,SADb;AAEE,IAAA,aAAa,EAAEA,SAAS,CAACU,aAF3B;AAGE,IAAA,SAAS,EAAEV,SAAS,CAACW,SAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,OAAD;AAAS,IAAA,MAAM,EAAEC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AASD;AAED,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Image, Platform, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nimport { Provider } from 'mobx-react'\n\n\nimport AppLoading from 'expo-app-loading';\nimport { useCustomFonts } from './src/hooks/useCustomFonts';\n\nimport QuizApp from './src/components/QuizApp';\nimport { getRandomQuestion } from './src/hooks/databaseHooks';\nimport rootStore from './src/stores/rootStore';\n\nexport default function App() {\n  let [fontsLoaded] = useCustomFonts();\n  const [result,setResult]=useState(window.localStorage.getItem(\"score\"))\n  // const score = window.localStorage.getItem(\"score\")\n\n\n\n\n  if (!fontsLoaded) {\n    console.log('not loaded');\n    return (\n      <AppLoading />\n    );\n  }\n\n  return (\n    <Provider\n      rootStore={rootStore}\n      questionStore={rootStore.questionStore}\n      quizStore={rootStore.quizStore}>\n      <QuizApp result={score} ></QuizApp>\n    </Provider>\n  );\n\n}\n\nconst styles = StyleSheet.create({\n\n});\n"]},"metadata":{},"sourceType":"module"}