{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { makeAutoObservable } from \"mobx\";\nimport questionsList from \"../models/questionsList\";\nexport var QuizStore = function () {\n  function QuizStore(rootStore, questionStore) {\n    _classCallCheck(this, QuizStore);\n\n    this.currentSelection = '';\n    this.currentQuestion = null;\n    this.showAnswer = false;\n    this.score = 0;\n    makeAutoObservable(this);\n    this.rootStore = rootStore;\n    this.questionStore = questionStore;\n    this.currentQuestion = questionStore.getRandomQuestion();\n  }\n\n  _createClass(QuizStore, [{\n    key: \"changeSelection\",\n    value: function changeSelection(selection) {\n      console.log(selection);\n      console.log(this.currentSelection);\n      this.currentSelection = selection;\n    }\n  }, {\n    key: \"isSelected\",\n    value: function isSelected(selection) {\n      return this.currentSelection == selection;\n    }\n  }, {\n    key: \"submitAnswer\",\n    value: function submitAnswer(option) {\n      if (this.currentQuestion.answer === option) {\n        console.log(\"correct\");\n        this.showAnswer = true;\n        this.score = this.score + 1;\n      } else {\n        console.log(\"incorrect\");\n      }\n\n      console.log(this.score);\n      window.localStorage.setItem('score', this.score);\n      location.reload();\n      var getscore = window.localStorage.getItem();\n      this.score = get;\n      console.log(getscore);\n    }\n  }, {\n    key: \"isOptionCorrect\",\n    value: function isOptionCorrect(option) {\n      return this.currentQuestion.answer == option;\n    }\n  }]);\n\n  return QuizStore;\n}();","map":{"version":3,"sources":["C:/Users/New  Leaders Tech/Desktop/kumar-final-master/src/stores/quizStore.js"],"names":["makeAutoObservable","questionsList","QuizStore","rootStore","questionStore","currentSelection","currentQuestion","showAnswer","score","getRandomQuestion","selection","console","log","option","answer","window","localStorage","setItem","location","reload","getscore","getItem","get"],"mappings":";;AAAA,SAASA,kBAAT,QAAmC,MAAnC;AACA,OAAOC,aAAP;AAEA,WAAaC,SAAb;AAOI,qBAAYC,SAAZ,EAAuBC,aAAvB,EAAsC;AAAA;;AAAA,SALtCC,gBAKsC,GALnB,EAKmB;AAAA,SAJtCC,eAIsC,GAJpB,IAIoB;AAAA,SAHtCC,UAGsC,GAHzB,KAGyB;AAAA,SAFtCC,KAEsC,GAF9B,CAE8B;AAClCR,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AAEA,SAAKG,SAAL,GAAiBA,SAAjB;AACA,SAAKC,aAAL,GAAqBA,aAArB;AACA,SAAKE,eAAL,GAAuBF,aAAa,CAACK,iBAAd,EAAvB;AACH;;AAbL;AAAA;AAAA,WAeI,yBAAgBC,SAAhB,EAA2B;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,gBAAjB;AACA,WAAKA,gBAAL,GAAwBK,SAAxB;AACH;AAnBL;AAAA;AAAA,WAqBI,oBAAWA,SAAX,EAAsB;AAClB,aAAO,KAAKL,gBAAL,IAAyBK,SAAhC;AACH;AAvBL;AAAA;AAAA,WAyBI,sBAAaG,MAAb,EAAqB;AAEjB,UAAI,KAAKP,eAAL,CAAqBQ,MAArB,KAAgCD,MAApC,EAA4C;AACxCF,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,aAAKL,UAAL,GAAkB,IAAlB;AACA,aAAKC,KAAL,GAAa,KAAKA,KAAL,GAAa,CAA1B;AAEH,OALD,MAMK;AACDG,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH;;AACDD,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAjB;AAEAO,MAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,EAAqC,KAAKT,KAA1C;AACAU,MAAAA,QAAQ,CAACC,MAAT;AACA,UAAMC,QAAQ,GAAGL,MAAM,CAACC,YAAP,CAAoBK,OAApB,EAAjB;AACA,WAAKb,KAAL,GAAYc,GAAZ;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAYQ,QAAZ;AAEH;AA5CL;AAAA;AAAA,WA+CI,yBAAgBP,MAAhB,EAAwB;AACpB,aAAO,KAAKP,eAAL,CAAqBQ,MAArB,IAA+BD,MAAtC;AACH;AAjDL;;AAAA;AAAA","sourcesContent":["import { makeAutoObservable } from \"mobx\"\nimport questionsList from \"../models/questionsList\";\n\nexport class QuizStore {\n    questionStore;\n    currentSelection = '';\n    currentQuestion = null;\n    showAnswer = false;\n    score = 0;\n\n    constructor(rootStore, questionStore) {\n        makeAutoObservable(this);\n\n        this.rootStore = rootStore;\n        this.questionStore = questionStore;\n        this.currentQuestion = questionStore.getRandomQuestion();\n    }\n\n    changeSelection(selection) {\n        console.log(selection)\n        console.log(this.currentSelection)\n        this.currentSelection = selection\n    }\n\n    isSelected(selection) {\n        return this.currentSelection == selection\n    }\n\n    submitAnswer(option) {\n\n        if (this.currentQuestion.answer === option) {\n            console.log(\"correct\")\n            this.showAnswer = true;\n            this.score = this.score + 1\n\n        }\n        else {\n            console.log(\"incorrect\")\n        }\n        console.log(this.score)\n        // location.reload()\n        window.localStorage.setItem('score', this.score)\n        location.reload()\n        const getscore = window.localStorage.getItem()\n        this.score= get\n        console.log(getscore)\n\n    }\n\n\n    isOptionCorrect(option) {\n        return this.currentQuestion.answer == option\n    }\n\n}"]},"metadata":{},"sourceType":"module"}