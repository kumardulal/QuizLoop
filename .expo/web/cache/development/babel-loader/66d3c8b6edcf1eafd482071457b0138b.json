{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\joshua\\\\Documents\\\\Github\\\\tutorial-final-project\\\\src\\\\components\\\\QuizApp.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport OptionButton from \"./OptionButton\";\nimport QuestionArea from \"./QuestionArea\";\nimport images from \"../../values/images\";\nimport { getRandomQuestion, useRandomQuestion } from \"../hooks/databaseHooks\";\nimport questionsList from \"../models/questionsList\";\nimport { inject, observer } from 'mobx-react';\nvar nextQuestion = false;\nvar QuizApp = inject('quizStore')(observer(function (props) {\n  var quizStore = props.quizStore;\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, React.createElement(QuestionArea, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.optionsContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, quizStore.currentQuestion.options.map(function (item, i) {\n    return React.createElement(OptionButton, {\n      key: i,\n      apple: item,\n      onClick: quizStore.changeSelection,\n      selected: quizStore.isSelected(item),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }\n    });\n  })), React.createElement(View, {\n    style: styles.submitContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.submitButton,\n    onPress: function onPress() {\n      return quizStore.submitAnswer();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    style: styles.submitButtonBackground,\n    source: images.submitButton,\n    resizeMode: \"contain\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.submitText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, \" SUBMIT \"))));\n}));\nexport default QuizApp;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundImage: src('https://i.pinimg.com/originals/3d/e0/7f/3de07f0da80b7070a0555ba04882339e.png'),\n    alignItems: 'center'\n  },\n  optionsContainer: {\n    width: '100%',\n    alignItems: 'center'\n  },\n  submitContainer: {\n    marginVertical: 15,\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  submitButtonBackground: {\n    width: 214,\n    height: 50,\n    position: 'absolute',\n    zIndex: 1\n  },\n  submitButton: {\n    width: '85%',\n    height: 50,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  submitText: {\n    color: 'white',\n    fontSize: 35,\n    fontFamily: 'PokemonPixelFont',\n    zIndex: 2\n  }\n});","map":{"version":3,"sources":["C:/Users/joshua/Documents/Github/tutorial-final-project/src/components/QuizApp.js"],"names":["React","useState","useEffect","OptionButton","QuestionArea","images","getRandomQuestion","useRandomQuestion","questionsList","inject","observer","nextQuestion","QuizApp","props","quizStore","styles","container","optionsContainer","currentQuestion","options","map","item","i","changeSelection","isSelected","submitContainer","submitButton","submitAnswer","submitButtonBackground","submitText","StyleSheet","create","flex","backgroundImage","src","alignItems","width","marginVertical","justifyContent","height","position","zIndex","color","fontSize","fontFamily"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Button, Image, StyleSheet, Text, TouchableOpacity, View } from 'react-native'\r\n\r\nimport OptionButton from './OptionButton';\r\nimport QuestionArea from './QuestionArea';\r\n\r\nimport images from '../../values/images';\r\nimport { getRandomQuestion, useRandomQuestion } from '../hooks/databaseHooks';\r\nimport questionsList from '../models/questionsList';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\nvar nextQuestion = false;\r\n\r\nconst QuizApp = inject('quizStore')(observer((props) => {\r\n    const quizStore = props.quizStore;\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <QuestionArea/>\r\n            <View  style={styles.optionsContainer}>\r\n                {quizStore.currentQuestion.options.map((item, i) => (\r\n                    <OptionButton key={i} apple={item} onClick={quizStore.changeSelection}\r\n                        selected={quizStore.isSelected(item)}/>\r\n                ))}\r\n            </View>\r\n            <View style={styles.submitContainer}>\r\n                <TouchableOpacity style={styles.submitButton} onPress={() => quizStore.submitAnswer()}>\r\n                <Image\r\n                    style={styles.submitButtonBackground}\r\n                    source={images.submitButton}\r\n                    resizeMode='contain'/>\r\n                <Text style={styles.submitText}> SUBMIT </Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    )\r\n}))\r\n\r\nexport default QuizApp\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundImage: src('https://i.pinimg.com/originals/3d/e0/7f/3de07f0da80b7070a0555ba04882339e.png'),\r\n        alignItems: 'center'\r\n      },\r\n      optionsContainer: {\r\n        width: '100%',\r\n        alignItems: 'center'\r\n      },\r\n      submitContainer: {\r\n        marginVertical: 15,\r\n        width: '100%',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n      },\r\n      submitButtonBackground: {\r\n        width: 214,\r\n        height: 50,\r\n        position: 'absolute',\r\n        zIndex: 1\r\n      },\r\n      submitButton: {\r\n        width: '85%',\r\n        height: 50,\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n      },\r\n      submitText: {\r\n        color: 'white',\r\n        fontSize: 35,\r\n        fontFamily: 'PokemonPixelFont',\r\n        zIndex: 2\r\n      }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}