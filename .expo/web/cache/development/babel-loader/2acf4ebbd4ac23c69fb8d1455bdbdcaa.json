{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { makeAutoObservable } from \"mobx\";\nimport questionsList from \"../models/questionsList\";\nexport var QuizStore = function () {\n  function QuizStore(rootStore, questionStore) {\n    _classCallCheck(this, QuizStore);\n\n    this.currentSelection = '';\n    this.currentQuestion = null;\n    this.showAnswer = false;\n    this.score = window.localStorage.getItem('score');\n    makeAutoObservable(this);\n    this.rootStore = rootStore;\n    this.questionStore = questionStore;\n    this.currentQuestion = questionStore.getRandomQuestion();\n  }\n\n  _createClass(QuizStore, [{\n    key: \"changeSelection\",\n    value: function changeSelection(selection) {\n      console.log(selection);\n      console.log(this.currentSelection);\n      this.currentSelection = selection;\n    }\n  }, {\n    key: \"isSelected\",\n    value: function isSelected(selection) {\n      return this.currentSelection == selection;\n    }\n  }, {\n    key: \"submitAnswer\",\n    value: function submitAnswer(option) {\n      if (this.currentQuestion.answer === option) {\n        console.log(\"correct\");\n        this.showAnswer = true;\n        var newScore = Number(this.score);\n        window.localStorage.setItem('score', newScore + 5);\n      } else {\n        this.showAnswer = true;\n\n        var _newScore = Number(this.score);\n\n        window.localStorage.setItem('score', _newScore - 2);\n      }\n\n      setTimeout(function () {\n        location.reload();\n      }, 5000);\n    }\n  }, {\n    key: \"isOptionCorrect\",\n    value: function isOptionCorrect(option) {\n      return this.currentQuestion.answer == option;\n    }\n  }]);\n\n  return QuizStore;\n}();","map":{"version":3,"sources":["C:/Users/New  Leaders Tech/Desktop/kumar-final-master/src/stores/quizStore.js"],"names":["makeAutoObservable","questionsList","QuizStore","rootStore","questionStore","currentSelection","currentQuestion","showAnswer","score","window","localStorage","getItem","getRandomQuestion","selection","console","log","option","answer","newScore","Number","setItem","setTimeout","location","reload"],"mappings":";;AAAA,SAASA,kBAAT,QAAmC,MAAnC;AACA,OAAOC,aAAP;AAEA,WAAaC,SAAb;AAQI,qBAAYC,SAAZ,EAAuBC,aAAvB,EAAsC;AAAA;;AAAA,SANtCC,gBAMsC,GANnB,EAMmB;AAAA,SALtCC,eAKsC,GALpB,IAKoB;AAAA,SAJtCC,UAIsC,GAJzB,KAIyB;AAAA,SAFtCC,KAEsC,GAF9BC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAE8B;AAClCX,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AAEA,SAAKG,SAAL,GAAiBA,SAAjB;AACA,SAAKC,aAAL,GAAqBA,aAArB;AACA,SAAKE,eAAL,GAAuBF,aAAa,CAACQ,iBAAd,EAAvB;AACH;;AAdL;AAAA;AAAA,WAgBI,yBAAgBC,SAAhB,EAA2B;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,gBAAjB;AACA,WAAKA,gBAAL,GAAwBQ,SAAxB;AACH;AApBL;AAAA;AAAA,WAsBI,oBAAWA,SAAX,EAAsB;AAClB,aAAO,KAAKR,gBAAL,IAAyBQ,SAAhC;AACH;AAxBL;AAAA;AAAA,WA0BI,sBAAaG,MAAb,EAAqB;AAKjB,UAAI,KAAKV,eAAL,CAAqBW,MAArB,KAAgCD,MAApC,EAA4C;AACxCF,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,aAAKR,UAAL,GAAkB,IAAlB;AAGA,YAAMW,QAAQ,GAAGC,MAAM,CAAC,KAAKX,KAAN,CAAvB;AAGAC,QAAAA,MAAM,CAACC,YAAP,CAAoBU,OAApB,CAA4B,OAA5B,EAAqCF,QAAQ,GAAG,CAAhD;AAEH,OAVD,MAWK;AACD,aAAKX,UAAL,GAAkB,IAAlB;;AAEA,YAAMW,SAAQ,GAAGC,MAAM,CAAC,KAAKX,KAAN,CAAvB;;AAGAC,QAAAA,MAAM,CAACC,YAAP,CAAoBU,OAApB,CAA4B,OAA5B,EAAqCF,SAAQ,GAAG,CAAhD;AAEH;;AACDG,MAAAA,UAAU,CAAC,YAAM;AACbC,QAAAA,QAAQ,CAACC,MAAT;AACH,OAFS,EAEP,IAFO,CAAV;AAOH;AA1DL;AAAA;AAAA,WA8DI,yBAAgBP,MAAhB,EAAwB;AACpB,aAAO,KAAKV,eAAL,CAAqBW,MAArB,IAA+BD,MAAtC;AACH;AAhEL;;AAAA;AAAA","sourcesContent":["import { makeAutoObservable } from \"mobx\"\nimport questionsList from \"../models/questionsList\";\n\nexport class QuizStore {\n    questionStore;\n    currentSelection = '';\n    currentQuestion = null;\n    showAnswer = false;\n\n    score = window.localStorage.getItem('score');\n\n    constructor(rootStore, questionStore) {\n        makeAutoObservable(this);\n\n        this.rootStore = rootStore;\n        this.questionStore = questionStore;\n        this.currentQuestion = questionStore.getRandomQuestion();\n    }\n\n    changeSelection(selection) {\n        console.log(selection)\n        console.log(this.currentSelection)\n        this.currentSelection = selection\n    }\n\n    isSelected(selection) {\n        return this.currentSelection == selection\n    }\n\n    submitAnswer(option) {\n\n\n\n\n        if (this.currentQuestion.answer === option) {\n            console.log(\"correct\")\n            this.showAnswer = true;\n\n\n            const newScore = Number(this.score)\n\n            // window.localStorage.clear()\n            window.localStorage.setItem('score', newScore + 5)\n\n        }\n        else {\n            this.showAnswer = true;\n\n            const newScore = Number(this.score)\n\n            // window.localStorage.clear()\n            window.localStorage.setItem('score', newScore - 2)\n\n        }\n        setTimeout(() => {\n            location.reload()\n        }, 5000);\n\n\n\n\n    }\n\n\n\n    isOptionCorrect(option) {\n        return this.currentQuestion.answer == option\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}