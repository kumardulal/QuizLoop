{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { makeAutoObservable } from \"mobx\";\nimport questionsList from \"../models/questionsList\";\nexport var QuizStore = function () {\n  function QuizStore(rootStore, questionStore) {\n    _classCallCheck(this, QuizStore);\n\n    this.currentSelection = '';\n    this.currentQuestion = null;\n    this.showAnswer = false;\n    makeAutoObservable(this);\n    this.rootStore = rootStore;\n    this.questionStore = questionStore;\n    this.currentQuestion = questionStore.getRandomQuestion();\n  }\n\n  _createClass(QuizStore, [{\n    key: \"changeSelection\",\n    value: function changeSelection(selection) {\n      console.log(selection);\n      console.log(this.currentSelection);\n      this.currentSelection = selection;\n    }\n  }, {\n    key: \"isSelected\",\n    value: function isSelected(selection) {\n      return this.currentSelection == selection;\n    }\n  }, {\n    key: \"submitAnswer\",\n    value: function submitAnswer(option) {\n      if (this.currentQuestion.answer === option) {\n        console.log(\"correct\");\n        this.showAnswer = true;\n      } else {\n        console.log(\"incorrect\");\n      }\n    }\n  }, {\n    key: \"isOptionCorrect\",\n    value: function isOptionCorrect(option) {\n      return this.currentQuestion.answer == option;\n    }\n  }]);\n\n  return QuizStore;\n}();","map":{"version":3,"sources":["C:/Users/New  Leaders Tech/Desktop/kumar-final-master/src/stores/quizStore.js"],"names":["makeAutoObservable","questionsList","QuizStore","rootStore","questionStore","currentSelection","currentQuestion","showAnswer","getRandomQuestion","selection","console","log","option","answer"],"mappings":";;AAAA,SAASA,kBAAT,QAAmC,MAAnC;AACA,OAAOC,aAAP;AAEA,WAAaC,SAAb;AAOI,qBAAYC,SAAZ,EAAuBC,aAAvB,EAAsC;AAAA;;AAAA,SALtCC,gBAKsC,GALnB,EAKmB;AAAA,SAJtCC,eAIsC,GAJpB,IAIoB;AAAA,SAHtCC,UAGsC,GAHzB,KAGyB;AAClCP,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AAEA,SAAKG,SAAL,GAAiBA,SAAjB;AACA,SAAKC,aAAL,GAAqBA,aAArB;AACA,SAAKE,eAAL,GAAuBF,aAAa,CAACI,iBAAd,EAAvB;AACH;;AAbL;AAAA;AAAA,WAeI,yBAAgBC,SAAhB,EAA2B;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,gBAAjB;AACA,WAAKA,gBAAL,GAAwBI,SAAxB;AACH;AAnBL;AAAA;AAAA,WAqBI,oBAAWA,SAAX,EAAsB;AAClB,aAAO,KAAKJ,gBAAL,IAAyBI,SAAhC;AACH;AAvBL;AAAA;AAAA,WAyBI,sBAAaG,MAAb,EAAqB;AAEjB,UAAI,KAAKN,eAAL,CAAqBO,MAArB,KAAgCD,MAApC,EAA4C;AACxCF,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,aAAKJ,UAAL,GAAkB,IAAlB;AAEH,OAJD,MAKK;AACDG,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH;AAGJ;AArCL;AAAA;AAAA,WAwCI,yBAAgBC,MAAhB,EAAwB;AACpB,aAAO,KAAKN,eAAL,CAAqBO,MAArB,IAA+BD,MAAtC;AACH;AA1CL;;AAAA;AAAA","sourcesContent":["import { makeAutoObservable } from \"mobx\"\nimport questionsList from \"../models/questionsList\";\n\nexport class QuizStore {\n    questionStore;\n    currentSelection = '';\n    currentQuestion = null;\n    showAnswer = false;\n    \n\n    constructor(rootStore, questionStore) {\n        makeAutoObservable(this);\n\n        this.rootStore = rootStore;\n        this.questionStore = questionStore;\n        this.currentQuestion = questionStore.getRandomQuestion();\n    }\n\n    changeSelection(selection) {\n        console.log(selection)\n        console.log(this.currentSelection)\n        this.currentSelection = selection\n    }\n\n    isSelected(selection) {\n        return this.currentSelection == selection\n    }\n\n    submitAnswer(option) {\n\n        if (this.currentQuestion.answer === option) {\n            console.log(\"correct\")\n            this.showAnswer = true;\n\n        }\n        else {\n            console.log(\"incorrect\")\n        }\n\n\n    }\n\n\n    isOptionCorrect(option) {\n        return this.currentQuestion.answer == option\n    }\n\n}"]},"metadata":{},"sourceType":"module"}